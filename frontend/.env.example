# import { useNavigation } from "@react-navigation/native";
# import axios from "axios";
# import { useState } from "react";
# import { Button, ScrollView, Text, TextInput, View } from "react-native";

# const SignUp = () => {
#   const [email, setEmail] = useState("");
#   const [password, setPassword] = useState("");
#   const [name, setName] = useState("");
#   const navigation = useNavigation();

#   const handleSignUp = async () => {
#     const exitsEmail = await axios.get(
#       "https://6757f286c0a427baf94e99ca.mockapi.io/users"
#     );
#     if (exitsEmail.data.find((user) => user.email === email)) {
#       alert("Email already exist");
#       return;
#     }
#     const res = await axios.post(
#       "https://6757f286c0a427baf94e99ca.mockapi.io/users",
#       {
#         name,
#         email,
#         password,
#         image: null,
#       }
#     );
#     alert("User created successfully");
#     navigation.navigate("Login");
#   };
#   return (
#     <>
#       <ScrollView
#         style={{
#           marginHorizontal: 20,
#           marginVertical: 20,
#         }}
#       >
#         <View
#           style={{
#             justifyContent: "center",
#             alignItems: "center",
#           }}
#         >
#           <View>
#             <TextInput
#               placeholder="Name"
#               style={{
#                 height: 40,
#                 borderColor: "gray",
#                 borderWidth: 1,
#                 width: 250,
#                 padding: 10,
#                 borderRadius: 5,
#                 marginBottom: 10,
#               }}
#               value={name}
#               onChangeText={(text) => setName(text)}
#             />
#             <TextInput
#               placeholder="Email"
#               style={{
#                 height: 40,
#                 borderColor: "gray",
#                 borderWidth: 1,
#                 width: 250,
#                 padding: 10,
#                 borderRadius: 5,
#                 marginBottom: 10,
#               }}
#               value={email}
#               onChangeText={(text) => setEmail(text)}
#             />
#             <TextInput
#               placeholder="Password"
#               secureTextEntry
#               style={{
#                 height: 40,
#                 borderColor: "gray",
#                 borderWidth: 1,
#                 width: 250,
#                 padding: 10,
#                 borderRadius: 5,
#                 marginBottom: 10,
#               }}
#               value={password}
#               onChangeText={(text) => setPassword(text)}
#             />
#           </View>
#           <Button title="Sign Up" onPress={handleSignUp} />
#           <Button title="Login" onPress={() => navigation.navigate("Login")} />
#         </View>
#       </ScrollView>
#     </>
#   );
# };
# export default SignUp;


# import { StatusBar } from "expo-status-bar";
# import { StyleSheet, Text, View } from "react-native";
# import { NavigationContainer } from "@react-navigation/native";
# import { createNativeStackNavigator } from "@react-navigation/native-stack";
# import Login from "./screens/Login";
# import Home from "./screens/Home";
# import SignUp from "./screens/SignUp";
# import Edit from "./screens/edit";
# import store from "./store/store";
# import { Provider } from "react-redux";
# export default function App() {
#   const Stack = createNativeStackNavigator();
#   return (
#     <Provider store={store}>
#       <NavigationContainer>
#         <Stack.Navigator
#           initialRouteName="Login"
#           screenOptions={{ headerShown: false }}
#         >
#           <Stack.Screen name="Login" component={Login} />
#           <Stack.Screen name="Home" component={Home} />
#           <Stack.Screen name="SignUp" component={SignUp} />
#           <Stack.Screen name="Edit" component={Edit} />
#         </Stack.Navigator>
#       </NavigationContainer>
#     </Provider>
#   );
# }

# const styles = StyleSheet.create({
#   container: {
#     flex: 1,
#     backgroundColor: "#fff",
#     alignItems: "center",
#     justifyContent: "center",
#   },
# });


# import React, { useEffect } from "react";
# import { Button, FlatList, Image, Text, View } from "react-native";
# import axios from "axios";
# import { useNavigation } from "@react-navigation/native";
# import { useDispatch, useSelector } from "react-redux";
# import { setUsers } from "../store/userSlice";
# const Home = () => {
#   const navigation = useNavigation();
#   const imageUrl = "http://localhost:3000/uploads/";
#   const dispatch = useDispatch();

#   const { users, user } = useSelector((state) => state.user);

#   const fetchAllUser = async () => {
#     try {
#       const res = await axios.get(
#         "https://6757f286c0a427baf94e99ca.mockapi.io/users"
#       );
#       console.log("Dữ liệu người dùng: ", res.data);

#       dispatch(setUsers(res));
#     } catch (error) {
#       console.error("Lỗi khi tải dữ liệu:", error);
#     }
#   };

#   useEffect(() => {
#     fetchAllUser();
#     console.log("Thông tin người dùng: ", user);
#   }, [user]);

#   const handleDelete = async (id) => {
#     const res = await axios.delete(
#       `https://6757f286c0a427baf94e99ca.mockapi.io/users/${id}`
#     );
#     console.log("Kết quả xóa:", res.data);
#     fetchAllUser();
#   };
#   return (
#     <>
#       <View style={{ padding: 20 }}>
#         <FlatList
#           data={users.data}
#           renderItem={({ item }) => (
#             <View
#               style={{
#                 flexDirection: "row",
#                 justifyContent: "space-between",
#                 padding: 10,
#                 borderBottomWidth: 1,
#                 borderBottomColor: "#ccc",
#               }}
#             >
#               <View>
#                 <Text>{item.name}</Text>
#               </View>
#               <View>
#                 <Text>{item.email}</Text>
#               </View>
#               <View>
#                 {item.image ? (
#                   <Image
#                     source={{ uri: item.image }}
#                     style={{ width: 50, height: 50 }}
#                   />
#                 ) : (
#                   <Text>Không có ảnh</Text>
#                 )}
#               </View>

#               <View
#                 style={{
#                   flexDirection: "row",
#                   justifyContent: "space-between",
#                   gap: 10,
#                 }}
#               >
#                 {/* action */}
#                 <Button
#                   title="Edit"
#                   onPress={() =>
#                     navigation.navigate("Edit", {
#                       id: item.id,
#                     })
#                   }
#                 />
#                 <Button title="Delete" onPress={() => handleDelete(item.id)} />
#               </View>
#             </View>
#           )}
#         />
#       </View>
#     </>
#   );
# };

# export default Home;


# import React, { useEffect, useState } from "react";
# import { Button, View, Text, Image } from "react-native";
# import axios from "axios";
# import { useNavigation } from "@react-navigation/native";
# import { useDispatch } from "react-redux";
# import { setUser } from "../store/userSlice";
# const Edit = ({ route }) => {
#   const { id } = route.params;
#   const [file, setFile] = useState(null);
#   const [user, setUser] = useState({});
#   const navigation = useNavigation();
#   const dispatch = useDispatch();
#   const handleFileChange = (event) => {
#     const selectedFile = event.target.files[0];
#     setFile(selectedFile);
#   };

#   const handleUpdate = async () => {
#     console.log("File:", file);

#     try {
#       // const formData = new FormData();
#       // formData.append("file", file);
#       // formData.append("upload_preset", "test_upload");
#       // formData.append("cloud_name", "da691iu2m");
#       // const res = await axios.post(
#       //   "https://api.cloudinary.com/v1_1/da691iu2m/image/upload",
#       //   formData
#       // );
#       // console.log("Kết quả upload:", res.data);
#       // const resUpdateUser = await axios.put(
#       //   `https://6757f286c0a427baf94e99ca.mockapi.io/users/${user.id}`,
#       //   {
#       //     email: user.email,
#       //     name: user.name,
#       //     password: 123456,
#       //     image: res.data.secure_url,
#       //   }
#       // );

#       // console.log("Kết quả cập nhật:", resUpdateUser.data);

#       const formData = new FormData();
#       formData.append("file", file);
#       const uploadRes = await axios.post(
#         "http://localhost:3000/upload-file",
#         formData,
#         {
#           headers: {
#             "Content-Type": "multipart/form-data",
#           },
#         }
#       );
#       const filePath = uploadRes.data.data.file.filename;
#       console.log("Đường dẫn file:", filePath);
#       const resUpdateUser = await axios.put(
#         "http://localhost:3000/update-user",
#         {
#           email: user.email,
#           name: user.name,
#           password: 1234567,
#           image: filePath,
#         },
#         {
#           headers: {
#             "Content-Type": "application/json",
#           },
#         }
#       );
#       console.log("Kết quả cập nhật:", resUpdateUser.data);
#       if (resUpdateUser.data.errCode === 0) {
#         alert("Cập nhật thành công!");
#         navigation.goBack();
#       } else {
#         alert(resUpdateUser.data.message);
#       }
#     } catch (error) {
#       console.error("Lỗi khi cập nhật:", error);
#       alert("Đã xảy ra lỗi khi cập nhật.");
#     }
#   };
#   const fetchUserById = async () => {
#     try {
#       const res = await axios.get(
#         "https://6757f286c0a427baf94e99ca.mockapi.io/users",
#         {
#           params: {
#             id: id,
#           },
#         }
#       );
#       setUser(res.data[0]);
#     } catch (error) {
#       console.log("Lỗi khi lấy thông tin người dùng:", error);
#     }
#   };
#   useEffect(() => {
#     fetchUserById();
#   }, []);
#   return (
#     <View style={{ padding: 20 }}>
#       <Text style={{ marginBottom: 10 }}>Tên người dùng: {user.name}</Text>
#       <Text style={{ marginBottom: 10 }}>Email: {user.email}</Text>

#       <label
#         htmlFor="file-upload"
#         style={{ marginBottom: 10, display: "block" }}
#       >
#         Chọn file ảnh
#       </label>
#       <input
#         type="file"
#         id="file-upload"
#         accept="image/*"
#         onChange={handleFileChange}
#         style={{ marginBottom: 20 }}
#       />
#       <Image source={file} style={{ width: 100, height: 100 }} />

#       {file && (
#         <Text style={{ marginBottom: 20 }}>
#           <strong>Tên tệp:</strong> {file.name} <br />
#           <strong>Loại tệp:</strong> {file.type} <br />
#           <strong>Kích thước:</strong> {file.size} bytes
#         </Text>
#       )}

#       <View
#         style={{
#           flexDirection: "row",
#           justifyContent: "space-between",
#           gap: 10,
#         }}
#       >
#         <Button title="Quay lại" onPress={() => navigation.goBack()} />
#         <Button title="Lưu" onPress={handleUpdate} />
#       </View>
#     </View>
#   );
# };

# export default Edit;
